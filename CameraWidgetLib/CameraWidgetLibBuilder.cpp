/**
CameraWidgetLibBuilder implementation.
*/

#include "CameraWidgetLibBuilder.h"

#include "CameraWidgetDependencies.h"
#include "camerawidget.h"

using namespace CameraWidgetLib;

/**
Do not edit. Autogenerated Builder constructor.
*/
CameraWidgetLibBuilder::CameraWidgetLibBuilder(const char* libName, const char* timeStamp)
    : CDPBuilder(libName, timeStamp)
{
}

/**
Do not edit. Autogenerated Builder CDPComponent factory function.
*/
CDPComponent* CameraWidgetLibBuilder::CreateNewComponent(const std::string& type)
{
    if (type=="CameraWidgetLib.CameraWidgetDependencies")
        return new CameraWidgetDependencies;

    return CDPBuilder::CreateNewComponent(type);
}

/**
Do not edit. Autogenerated Builder CDPBaseObject factory function.
*/
CDPBaseObject* CameraWidgetLibBuilder::CreateNewCDPOperator(const std::string& modelName, const std::string& type, const CDPPropertyBase* inputProperty)
{
    return CDPBuilder::CreateNewCDPOperator(modelName, type, inputProperty);
}

QWidget *CameraWidgetLibBuilder::CreateNewWidget(const QString &className, QWidget *parent, const QString& /*name*/)
{
  QWidget *pWidget = 0;
  if(className == QLatin1String("CameraWidget"))
    pWidget = new CameraWidget(parent);
  return pWidget;
}
